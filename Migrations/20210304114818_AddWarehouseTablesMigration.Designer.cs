// <auto-generated />
using System;
using Datawarehouse_Backend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Datawarehouse_Backend.Migrations
{
    [DbContext(typeof(WarehouseContext))]
    [Migration("20210304114818_AddWarehouseTablesMigration")]
    partial class AddWarehouseTablesMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Datawarehouse_Backend.Models.AbsenceRegister", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("abcenseType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("absenceId")
                        .HasColumnType("bigint");

                    b.Property<string>("degreeDisability")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("duration")
                        .HasColumnType("double precision");

                    b.Property<long>("employeeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("fromDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("soleCaretaker")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("toDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("id");

                    b.ToTable("AbsenceRegisters");
                });

            modelBuilder.Entity("Datawarehouse_Backend.Models.Accountsreceivable", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("amount")
                        .HasColumnType("double precision");

                    b.Property<double>("amountDue")
                        .HasColumnType("double precision");

                    b.Property<long>("customerId")
                        .HasColumnType("bigint");

                    b.Property<string>("customerName")
                        .HasColumnType("text");

                    b.Property<DateTime>("dueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("jobId")
                        .HasColumnType("bigint");

                    b.Property<string>("note")
                        .HasColumnType("text");

                    b.Property<long>("oderId")
                        .HasColumnType("bigint");

                    b.Property<string>("overdueNotice")
                        .HasColumnType("text");

                    b.Property<DateTime>("recordDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("recordType")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Accountsreceivables");
                });

            modelBuilder.Entity("Datawarehouse_Backend.Models.BalanceAndBudget", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("account")
                        .HasColumnType("text");

                    b.Property<string>("department")
                        .HasColumnType("text");

                    b.Property<double>("endBalance")
                        .HasColumnType("double precision");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<double>("periodBalance")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("periodDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("startBalance")
                        .HasColumnType("double precision");

                    b.Property<long>("tennantId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("BalanceAndBudgets");
                });
#pragma warning restore 612, 618
        }
    }
}
